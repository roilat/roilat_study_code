<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.roilat.biz.blog.mappers.BlogArticleMapper">
	<resultMap id="BlogArticleResultMap" type="cn.roilat.biz.blog.model.BlogArticle">
		<result column="ID" jdbcType="INTEGER" property="id" />
		<result column="CODE" jdbcType="CHAR" property="code" />
		<result column="TITLE" jdbcType="VARCHAR" property="title" />
		<result column="COVER" jdbcType="VARCHAR" property="cover" />
		<result column="SOURCE" jdbcType="VARCHAR" property="source" />
		<result column="ATTACHMENTS" jdbcType="VARCHAR" property="attachments" />
		<result column="IF_PUBLISH" jdbcType="CHAR" property="ifPublish" />
		<result column="IF_COMMENT" jdbcType="CHAR" property="ifComment" />
		<result column="CREATE_DT" jdbcType="TIMESTAMP" property="createDt" />
		<result column="UPDATE_DT" jdbcType="TIMESTAMP" property="updateDt" />
		<result column="CREATOR" jdbcType="VARCHAR" property="creator" />
		<result column="UPDATOR" jdbcType="VARCHAR" property="updator" />
		<result column="STATE" jdbcType="CHAR" property="state" />
		<result column="CONTENT" jdbcType="LONGVARCHAR" property="content" />
	</resultMap>
	<sql id="Where_Clause">
		<where>
			<foreach collection="criterias" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Where_Clause">
		<where>
			<foreach collection="param.criterias" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		ID, CODE, TITLE, COVER, SOURCE, ATTACHMENTS, IF_PUBLISH, IF_COMMENT,
		CREATE_DT, UPDATE_DT, CREATOR, UPDATOR, STATE,CONTENT
	</sql>
	<delete id="delete" parameterType="cn.roilat.biz.blog.dbo.BlogArticleDO">
		delete from t_blog_article
		<if test="_parameter != null">
			<include refid="Where_Clause" />
		</if>
	</delete>
	<select id="pageCount" parameterType="cn.roilat.biz.blog.dbo.BlogArticleDO" resultType="java.lang.Long">
		select count(*) from t_blog_article
		<if test="_parameter != null">
			<include refid="Where_Clause" />
		</if>
	</select>
	<select id="pageList"
		parameterType="cn.roilat.biz.blog.dbo.BlogArticleDO"
		resultMap="BlogArticleResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from t_blog_article
		<if test="_parameter != null">
			<include refid="Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	
	<insert id="insert"
		parameterType="cn.roilat.biz.blog.model.BlogArticle">
		<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into t_blog_article (CODE, TITLE, COVER,
		SOURCE, ATTACHMENTS, IF_PUBLISH,
		IF_COMMENT, CREATE_DT, UPDATE_DT,
		CREATOR, UPDATOR, STATE,
		CONTENT)
		values (#{code,jdbcType=CHAR}, #{title,jdbcType=VARCHAR},
		#{cover,jdbcType=VARCHAR},
		#{source,jdbcType=VARCHAR}, #{attachments,jdbcType=VARCHAR}, #{ifPublish,jdbcType=CHAR},
		#{ifComment,jdbcType=CHAR}, #{createDt,jdbcType=TIMESTAMP},
		#{updateDt,jdbcType=TIMESTAMP},
		#{creator,jdbcType=VARCHAR}, #{updator,jdbcType=VARCHAR}, #{state,jdbcType=CHAR},
		#{content,jdbcType=LONGVARCHAR})
	</insert>
	
	<update id="update" parameterType="map">
		update t_blog_article
		<set>
			<if test="record.id != null">
				ID = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.code != null">
				CODE = #{record.code,jdbcType=CHAR},
			</if>
			<if test="record.title != null">
				TITLE = #{record.title,jdbcType=VARCHAR},
			</if>
			<if test="record.cover != null">
				COVER = #{record.cover,jdbcType=VARCHAR},
			</if>
			<if test="record.source != null">
				SOURCE = #{record.source,jdbcType=VARCHAR},
			</if>
			<if test="record.attachments != null">
				ATTACHMENTS = #{record.attachments,jdbcType=VARCHAR},
			</if>
			<if test="record.ifPublish != null">
				IF_PUBLISH = #{record.ifPublish,jdbcType=CHAR},
			</if>
			<if test="record.ifComment != null">
				IF_COMMENT = #{record.ifComment,jdbcType=CHAR},
			</if>
			<if test="record.createDt != null">
				CREATE_DT = #{record.createDt,jdbcType=TIMESTAMP},
			</if>
			<if test="record.updateDt != null">
				UPDATE_DT = #{record.updateDt,jdbcType=TIMESTAMP},
			</if>
			<if test="record.creator != null">
				CREATOR = #{record.creator,jdbcType=VARCHAR},
			</if>
			<if test="record.updator != null">
				UPDATOR = #{record.updator,jdbcType=VARCHAR},
			</if>
			<if test="record.state != null">
				STATE = #{record.state,jdbcType=CHAR},
			</if>
			<if test="record.content != null">
				CONTENT = #{record.content,jdbcType=LONGVARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Where_Clause" />
		</if>
	</update>
</mapper>