<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
  PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
  "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<!-- 参考：https://www.cnblogs.com/hihtml5/p/6866532.html -->
<generatorConfiguration>
	<!-- <classPathEntry location="/Program Files/IBM/SQLLIB/java/db2java.zip" 
		/> -->

	<context id="mysqlTables" targetRuntime="MyBatis3"
		defaultModelType="hierarchical">


		<!-- 自动识别数据库关键字，默认false，如果设置为true，根据SqlReservedWords中定义的关键字列表； 一般保留默认值，遇到数据库关键字（Java关键字），使用columnOverride覆盖 -->
		<property name="autoDelimitKeywords" value="false" />
		<!-- 生成的Java文件的编码 -->
		<property name="javaFileEncoding" value="UTF-8" />

		<!-- 格式化java代码 -->
		<property name="javaFormatter"
			value="org.mybatis.generator.api.dom.DefaultJavaFormatter" />
		<!-- 格式化XML代码 -->
		<property name="xmlFormatter"
			value="org.mybatis.generator.api.dom.DefaultXmlFormatter" />

		<!-- beginningDelimiter和endingDelimiter：指明数据库的用于标记数据库对象名的符号，比如ORACLE就是双引号，MYSQL默认是`反引号； -->
		<!-- <property name="beginningDelimiter" value="`" />
		<property name="endingDelimiter" value="`" /> -->

		<jdbcConnection driverClass="com.mysql.jdbc.Driver"
			connectionURL="jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&amp;characterEncoding=UTF-8&amp;useSSL=false&amp;serverTimezone=UTC"
			userId="root" password="abc123">
			<!-- 这里面可以设置property属性，每一个property属性都设置到配置的Driver上 -->
		</jdbcConnection>
		<!-- java类型处理器 用于处理DB中的类型到Java中的类型，默认使用JavaTypeResolverDefaultImpl； 注意一点，默认会先尝试使用Integer，Long，Short等来对应DECIMAL和 
			NUMERIC数据类型； -->
		<javaTypeResolver>
		<!-- 
            true：使用BigDecimal对应DECIMAL和 NUMERIC数据类型
            false：默认,
                scale>0;length>18：使用BigDecimal;
                scale=0;length[10,18]：使用Long；
                scale=0;length[5,9]：使用Integer；
                scale=0;length<5：使用Short；
         -->
			<property name="forceBigDecimals" value="false" />
		</javaTypeResolver>

		<!-- java模型创建器，是必须要的元素
		        负责：1，key类（见context的defaultModelType）；2，java类；3，查询类
		        targetPackage：生成的类要放的包，真实的包受enableSubPackages属性控制；
		        targetProject：目标项目，指定一个存在的目录下，生成的内容会放到指定目录中，如果目录不存在，MBG不会自动建目录
		-->
		<javaModelGenerator targetPackage="org.linjiezhijia.generator.model"
			targetProject=".\src\main\java">
			<property name="enableSubPackages" value="true" />
			<property name="trimStrings" value="true" />
		</javaModelGenerator>

		<sqlMapGenerator targetPackage="org.linjiezhijia.generator.mappers"
			targetProject=".\src\main\java">
			<property name="enableSubPackages" value="true" />
		</sqlMapGenerator>

		<javaClientGenerator type="XMLMAPPER"
			targetPackage="org.linjiezhijia.generator.mappers" targetProject=".\src\main\java">
			<property name="enableSubPackages" value="true" />
		</javaClientGenerator>

		<table schema="test" tableName="tb_article" domainObjectName="Article">
			<property name="useActualColumnNames" value="false" />
			<generatedKey column="ID" sqlStatement="mysql" identity="true" />
			<!-- <columnOverride column="DATE_FIELD" property="startDate" /> <ignoreColumn 
				column="FRED" /> <columnOverride column="LONG_VARCHAR_FIELD" jdbcType="VARCHAR" 
				/> -->
		</table>

	</context>
</generatorConfiguration>